<!doctype html>
<html>
<head>
<meta charset="utf-8">
<title>MarkLogic Fundamentals</title>
<link href="../css/ml.css" rel="stylesheet" type="text/css">
</head>

<body>
<p><img src="../images/general/Marklogic-University-RGB.png" alt="" width="130" height="38" class="logo-padding"/></p>
<p class="topic-heading"><strong>Understanding Ways to Communicate</strong></p>
<p>There are many administrative and development interfaces for communicating with MarkLogic.</p>
<p> Common <strong>administrative</strong> interfaces include:</p>
<ul>
  <li>Admin Interface (port 8001)</li>
  <li>Admin API </li>
  <li>Configuration Manager (port 8002)</li>
  <li>Monitoring Dashboards (port 8002)</li>
</ul>
<p>Common <strong>development</strong> interfaces include:</p>
<ul>
  <li>Query Console (port 8000)</li>
  <li>XQuery (native)</li>
  <li> JavaScript (native)</li>
  <li>REST API</li>
  <li>Java API</li>
  <li>Node.js API</li>
  <li>XCC<br>
</li>
</ul>
<p><br>
The <strong>Admin Interface</strong> provides a graphical user interface for a multitude of administrative tasks, such as creating and configuring databases, forests, application servers, security, backups, schemas, and groups. </p>
<p>The <strong>Admin API</strong> provides a way to script    tasks available in the Admin Interface.</p>
<p>The <strong>Configuration Manager</strong> provides a way to export configurations from one cluster to then import them in another.</p>
<p>The <strong>Monitoring Dashboard</strong> and <strong>Monitoring History</strong> dashboards provide a graphical user interface for administrators to  monitor performance metrics.</p>
<p><strong>Query Console</strong> is an interface that allows developers to communicate with MarkLogic while writing and testing JavaScript and XQuery expressions.</p>
<p><strong>XQuery </strong>and<strong> JavaScript</strong>, both native programming languages in MarkLogic, can be used to create a single-tier application in MarkLogic.</p>
<p>The <strong>REST API</strong> provides a programming language-agnostic interface for developers to use to communicate with a MarkLogic database. </p>
<p>Built on the REST API, the <strong>Java API</strong> provides Java classes to make it easy for Java   developers to build applications that use a MarkLogic database. </p>
<p>Built on the REST API, the <strong>Node.js API </strong>provides an npm package to make it easy for Node.js   developers to build applications that use a MarkLogic database.</p>
<p><strong>XCC</strong> (XML Content Connector) is a low-level API that  is the basis for MLCP (MarkLogic Content Pump), the Hadoop Connector, and the XCC .NET API. <br>
</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>Next: <a href="0401_x_view_the_guides.htm" class="exercise-link">Exercise (View the Guides)</a></p>
<hr>
<p class="copyright">Â©2015 MarkLogic Corporation. All rights reserved. Copying, selling, or otherwise distributing any part of this course without prior written consent of an authorized representative of MarkLogic Corporation is prohibited.</p>
</body>
</html>
